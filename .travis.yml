sudo: required
dist: bionic
services:
  - xvfb
language: c
cache:
  directories:
  - node_modules
  - "$HOME/.electron"
  - "$HOME/.cache"
before_install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
install:
- nvm install 8 --lts
- curl -o- -L https://yarnpkg.com/install.sh | bash
- source ~/.bashrc
- nvm use 8
- yarn --version
- nvm --version
- node --version
- yarn
script: true
stages:
- name: prescript
  if: branch IN (ci) AND commit_message !~ /^appveyor Updating branch from appveyor
    build.$/
- name: lint
  if: "(branch IN (master, ci, testci, develop) AND commit_message !~ /^appveyor Updating
    branch from appveyor build.$/) OR type == pull_request OR tag =~ /^v\\\\d+\\\\.\\\\d+(\\\\.\\\\d+)?(-\\\\S*)?$/"
- name: unittest
  if: branch IN (master) OR type IN (pull_request)
- name: unittestandcoverage
  if: branch IN (ci, testci) AND commit_message !~ /^appveyor Updating branch from
    appveyor build.$/
- name: test
  if: type IN (pull_request) OR (branch IN (ci, testci, master) AND commit_message
    !~ /^appveyor Updating branch from appveyor build.$/)
- name: build
  if: tag =~ ^v\d+\.\d+(\.\d+)?(-\S*)?$
jobs:
  include:
  - stage: prescript
    os: osx
    before_script: "./scripts/ci_merge_script.sh"
    script: yarn
  - os: linux
    before_script: "./scripts/ci_merge_script.sh"
    script: yarn
  - stage: lint
    os: osx
    script: yarn run lint
  - os: linux
    script: yarn run lint
  - stage: unittest
    os: osx
    script:
    - yarn run clean
    - yarn run unit
  - os: linux
    script:
    - yarn run clean
    - "./scripts/linux_install_os_dependencies_for_testing_on_ubuntu.sh"
    - "./scripts/travis_headless_linux_unit_tests_script.sh"
  - stage: unittestandcoverage
    allow_failures:
    - os: linux
    os: osx
    script:
    - yarn run clean
    - yarn run unit
    - yarn run unit:coverage
  - os: linux
    script:
    - yarn run clean
    - "./scripts/linux_install_os_dependencies_for_testing_on_ubuntu.sh"
    - "./scripts/travis_headless_linux_unit_tests_script.sh"
  - stage: test
    os: osx
    script: "./scripts/travis_headless_e2e_tests.sh test/features/backlog"
  - os: linux
    script: "./scripts/travis_headless_e2e_tests.sh test/features/backlog"
  - os: osx
    script: "./scripts/travis_headless_e2e_tests.sh test/features/data_curator"
  - os: linux
    script: "./scripts/travis_headless_e2e_tests.sh test/features/data_curator"
  - os: osx
    script: "./scripts/travis_headless_e2e_tests.sh test/features/edit"
  - os: linux
    script: "./scripts/travis_headless_e2e_tests.sh test/features/edit"
  - os: osx
    script: "./scripts/travis_headless_e2e_tests.sh test/features/file"
  - os: linux
    script: "./scripts/travis_headless_e2e_tests.sh test/features/file"
  - os: osx
    script: "./scripts/travis_headless_e2e_tests.sh test/features/find"
  - os: linux
    script: "./scripts/travis_headless_e2e_tests.sh test/features/find"
  - os: osx
    script: "./scripts/travis_headless_e2e_tests.sh test/features/help"
  - os: linux
    script: "./scripts/travis_headless_e2e_tests.sh test/features/help"
  - os: osx
    script: "./scripts/travis_headless_e2e_tests.sh test/features/other"
  - os: linux
    script: "./scripts/travis_headless_e2e_tests.sh test/features/other"
  - os: osx
    script: "./scripts/travis_headless_e2e_tests.sh test/features/support"
  - os: linux
    script: "./scripts/travis_headless_e2e_tests.sh test/features/support"
  - os: osx
    script: "./scripts/travis_headless_e2e_tests.sh test/features/tools"
  - os: linux
    script: "./scripts/travis_headless_e2e_tests.sh test/features/tools"
  - os: osx
    script: "./scripts/travis_headless_e2e_tests.sh test/features/window"
  - os: linux
    script: "./scripts/travis_headless_e2e_tests.sh test/features/window"
  - stage: build
    os: osx
    script:
    - yarn run clean
    - yarn run release:predraft
env:
  global:
  - secure: F+Bn6BrNKTTybkEs4UwCl7961z7ura2zBeuw+tS/vXqswb//x9DEhEr5IJ53VyC+H2R3Wj8yJ121514FiJwNg4hUpUQ98DHyczbMLXrg+wjQI2ZYvhiAonR5LzDGNd/XLhSDezQK556+guq67SnGPP3iqnfjyu8XJ2IaynLukvLSazZTCliuqpEpwaCn99+xhaHLcGRF/Dh2Gg5+HVfQnC4S6eiYGo5Dm9RDG0hntxYHUOAxQYmnvXxf7uLNc0sfFSoVd1BZytZCVFLceY5DM0tOO8kRyMQk+LJqneAdhp9Z8pUMcTMDeJtNegqqSaBra8UAkrGv1tUrBYUQnq4fkbH0tees6mJNFkqNlOW67pj8zghYSAKwNXiazFmH/lYE2sleBKGflznLZPDD5XXLlQ/aKXF+3wAx0wMtiGkFBbGP+GoBg10+7RgKw0A+mpLaJAVwUYGGJSEfH3A0U0OEt7XRdk/sD4nFKLzL3SAx3QC57FdGu4VWdJJT9t54oX+NzM3QmBH3dNxmge4XFLR1iwN72yheB2HyGu5zafKdOfbvCz2fP1ddECm2KWu8I7NNuBIwoBUm3tVm60b3gTpblAO3RcIrLg3k+ACTSvxJuzqSIE2/YnXGnjfVPW/NaCcyD1cPFppTvmpjLNHRfwP9zeP4nBOHHgOv7grzmvCs6QY=
  - secure: R1p+QnWeiz2NXLc9phnPzKzs/qgosewMkQDL3DAyq3HnXNCGIVGSe+nr1AJTSel1Mit9isMK0B1M3QXr6+8xsURWUIA0zA+PJxZ90/H8Zr1WapDdRVKdrPWj1HV1Iv3htbZcEmWCHhdlTb2XJ1Zu0oyVEFQilhjScD26LxekYg1I1G/wu1axZhS9ieTbnuTiDrIMSZH+fXygZrXf2uzn9DQNi/VDgrKqkVpPZjyFMDA4OjW1I5egNtj2y42eWi5KRPh8IVzvnwUczh21bcJ+nfagA8ur3ZOjzqC+8wDl/EMjZ4uv+X7r0jmuSQV/pCnj6Zq5x5foXIKyPSNIQZiXUZbxZ9tU5Sy5BOUgjbc9iIsbQT6iGpSomHJrqe/hbDW6URsO85rV2gp2NETRm/RUQlc6ZsTdlhjlwPJAVUq2A8NYThUIo4u586SKnQ2WK4vt1lTXVAxr0JxJFenQD632Ye03Tzk1KUxriIXlo/uN4UuuSf3d0Kl9KFY0gr+lW/GDyf3KeZ4ve4ksgAkOR9tUMJvJiR00u0mM/C85QRNTUIX6o9UrODqx5vNypwGoZE/tKgVm9sjrGpHzJ6jSz5LxIKQMEFAd3zFPlGSVUclTbYUvdWH8YZCLWcNk5V1+hihgJsyS/Q+BecMrRKrWToIgyueQb95ZIRJdN9hvZiucjG8=
